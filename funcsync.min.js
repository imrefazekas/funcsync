!function(){var root=this,funcsync=function(obj){return obj instanceof funcsync?obj:this instanceof funcsync?(this._wrapped=obj,void 0):new funcsync(obj)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=funcsync),exports.funcsync=funcsync):root.funcsync=funcsync,funcsync.VERSION="1.0.7";var toString=Object.prototype.toString;funcsync.startsWith=function(str,substr){return 0===str.indexOf(substr)},funcsync.isString=function(obj){return"[object String]"==toString.call(obj)},funcsync.isObject=function(obj){return obj===Object(obj)},funcsync.isNumber=function(obj){return toString.call(obj)=="[object "+Number+"]"||!isNaN(obj)},funcsync.isDate=function(obj){return toString.call(obj)=="[object "+Date+"]"},funcsync.isArray=Array.isArray||function(obj){return"[object Array]"==toString.call(obj)},funcsync.isFunction=function(obj){return toString.call(obj)=="[object "+Function+"]"},funcsync.isBoolean=function(obj){return obj===!0||obj===!1||"[object Boolean]"==toString.call(obj)};var nativeForEach=Array.prototype.forEach;funcsync.each=function(obj,iterator,context){if(null!==obj)if(nativeForEach&&obj.forEach===nativeForEach)obj.forEach(iterator,context);else if(funcsync.isArray(obj)){for(var i=0,l=obj.length;l>i;i++)if(iterator.call(context,obj[i],i,obj)===breaker)return}else for(var key in obj)if(iterator.call(context,obj[key],key,obj)===breaker)return},"function"!=typeof/./&&(funcsync.isFunction=function(obj){return"function"==typeof obj}),funcsync.stringify=function(obj){var res;if(funcsync.isString(obj)||funcsync.isDate(obj)||funcsync.isNumber(obj))res=obj;else if(funcsync.isFunction(obj))res=obj.toString();else if(funcsync.isArray(obj)){res=[];for(var index in obj)res.push(funcsync.stringify(obj[index]))}else if(funcsync.isObject(obj)){res={};for(var key in obj)res[key]=funcsync.stringify(obj[key])}else res=obj;return res},funcsync.functify=function(obj,context){var self=context;return function(tree){function bindify(data){var res;if(funcsync.isString(data)&&funcsync.startsWith(data,"function "))res=eval("("+data+")");else if(funcsync.isString(data)||funcsync.isDate(data)||funcsync.isNumber(data))res=data;else if(funcsync.isArray(data)){res=[];for(var index in data)res.push(bindify(data[index]))}else if(funcsync.isObject(data)){res={};for(var key in data)res[key]=bindify(data[key])}else res=data;return res}return bindify(tree)}(obj)}}.call(this);